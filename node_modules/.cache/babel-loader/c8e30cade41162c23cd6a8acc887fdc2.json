{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar d3Scale = require('d3-scale');\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar d3TimeFormat = require('d3-time-format');\n\nvar uniq = _interopDefault(require('lodash/uniq'));\n\nvar uniqBy = _interopDefault(require('lodash/uniqBy'));\n\nvar sortBy = _interopDefault(require('lodash/sortBy'));\n\nvar last = _interopDefault(require('lodash/last'));\n\nvar isDate = _interopDefault(require('lodash/isDate'));\n\nvar linearScale = function linearScale(_ref, xy, width, height) {\n  var axis = _ref.axis,\n      _ref$min = _ref.min,\n      min = _ref$min === undefined ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === undefined ? 'auto' : _ref$max,\n      _ref$stacked = _ref.stacked,\n      stacked = _ref$stacked === undefined ? false : _ref$stacked;\n  var values = xy[axis];\n  var size = axis === 'x' ? width : height;\n  var minValue = min;\n\n  if (min === 'auto') {\n    minValue = stacked === true ? values.minStacked : values.min;\n  }\n\n  var maxValue = max;\n\n  if (max === 'auto') {\n    maxValue = stacked === true ? values.maxStacked : values.max;\n  }\n\n  var scale = d3Scale.scaleLinear().rangeRound(axis === 'x' ? [0, size] : [size, 0]).domain([minValue, maxValue]);\n  scale.type = 'linear';\n  scale.stacked = stacked;\n  return scale;\n};\n\nvar linearScalePropTypes = {\n  type: PropTypes.oneOf(['linear']).isRequired,\n  min: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  stacked: PropTypes.bool\n};\n\nvar pointScale = function pointScale(_ref, xy, width, height) {\n  var axis = _ref.axis;\n  var values = xy[axis];\n  var size = axis === 'x' ? width : height;\n  var scale = d3Scale.scalePoint().range([0, size]).domain(values.all);\n  scale.type = 'point';\n  return scale;\n};\n\nvar pointScalePropTypes = {\n  type: PropTypes.oneOf(['point']).isRequired\n};\n\nvar _precisionCutOffsByTy;\n\nvar TIME_PRECISION_MILLISECOND = 'millisecond';\nvar TIME_PRECISION_SECOND = 'second';\nvar TIME_PRECISION_MINUTE = 'minute';\nvar TIME_PRECISION_HOUR = 'hour';\nvar TIME_PRECISION_DAY = 'day';\nvar TIME_PRECISION_MONTH = 'month';\nvar TIME_PRECISION_YEAR = 'year';\nvar timePrecisions = [TIME_PRECISION_MILLISECOND, TIME_PRECISION_SECOND, TIME_PRECISION_MINUTE, TIME_PRECISION_HOUR, TIME_PRECISION_DAY, TIME_PRECISION_MONTH, TIME_PRECISION_YEAR];\nvar precisionCutOffs = [function (date) {\n  return date.setMilliseconds(0);\n}, function (date) {\n  return date.setSeconds(0);\n}, function (date) {\n  return date.setMinutes(0);\n}, function (date) {\n  return date.setHours(0);\n}, function (date) {\n  return date.setDate(1);\n}, function (date) {\n  return date.setMonth(0);\n}];\nvar precisionCutOffsByType = (_precisionCutOffsByTy = {}, _precisionCutOffsByTy[TIME_PRECISION_MILLISECOND] = [], _precisionCutOffsByTy[TIME_PRECISION_SECOND] = precisionCutOffs.slice(0, 1), _precisionCutOffsByTy[TIME_PRECISION_MINUTE] = precisionCutOffs.slice(0, 2), _precisionCutOffsByTy[TIME_PRECISION_HOUR] = precisionCutOffs.slice(0, 3), _precisionCutOffsByTy[TIME_PRECISION_DAY] = precisionCutOffs.slice(0, 4), _precisionCutOffsByTy[TIME_PRECISION_MONTH] = precisionCutOffs.slice(0, 5), _precisionCutOffsByTy[TIME_PRECISION_YEAR] = precisionCutOffs.slice(0, 6), _precisionCutOffsByTy);\n\nvar createPrecisionMethod = function createPrecisionMethod(precision) {\n  return function (date) {\n    precisionCutOffsByType[precision].forEach(function (cutOff) {\n      cutOff(date);\n    });\n    return date;\n  };\n};\n\nvar createDateNormalizer = function createDateNormalizer(_ref) {\n  var _ref$format = _ref.format,\n      format = _ref$format === undefined ? 'native' : _ref$format,\n      _ref$precision = _ref.precision,\n      precision = _ref$precision === undefined ? 'millisecond' : _ref$precision;\n  var precisionFn = createPrecisionMethod(precision);\n  if (format === 'native') return function (v) {\n    return precisionFn(v);\n  };\n  var parseTime = d3TimeFormat.timeParse(format);\n  return function (v) {\n    return precisionFn(parseTime(v));\n  };\n};\n\nvar timeScale = function timeScale(_ref, xy, width, height) {\n  var axis = _ref.axis,\n      _ref$format = _ref.format,\n      format = _ref$format === undefined ? 'native' : _ref$format,\n      _ref$precision = _ref.precision,\n      precision = _ref$precision === undefined ? TIME_PRECISION_MILLISECOND : _ref$precision,\n      _ref$min = _ref.min,\n      min = _ref$min === undefined ? 'auto' : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === undefined ? 'auto' : _ref$max;\n  var values = xy[axis];\n  var size = axis === 'x' ? width : height;\n  var normalize = createDateNormalizer({\n    format: format,\n    precision: precision\n  });\n  var minValue = min;\n\n  if (min === 'auto') {\n    minValue = values.min;\n  } else if (format !== 'native') {\n    minValue = normalize(values.min);\n  }\n\n  var maxValue = max;\n\n  if (max === 'auto') {\n    maxValue = values.max;\n  } else if (format !== 'native') {\n    maxValue = normalize(values.max);\n  }\n\n  var scale = d3Scale.scaleTime().domain([minValue, maxValue]).range([0, size]);\n  scale.type = 'time';\n  return scale;\n};\n\nvar timeScalePropTypes = {\n  type: PropTypes.oneOf(['time']).isRequired,\n  format: PropTypes.string,\n  precision: PropTypes.oneOf(timePrecisions)\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar getOtherAxis = function getOtherAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n};\n\nvar compareValues = function compareValues(a, b) {\n  return a === b;\n};\n\nvar compareDateValues = function compareDateValues(a, b) {\n  return a.getTime() === b.getTime();\n};\n\nvar computeXYScalesForSeries = function computeXYScalesForSeries(_series, xScaleSpec, yScaleSpec, width, height) {\n  var series = _series.map(function (serie) {\n    return _extends({}, serie, {\n      data: serie.data.map(function (d) {\n        return {\n          data: _extends({}, d)\n        };\n      })\n    });\n  });\n\n  var xy = generateSeriesXY(series, xScaleSpec, yScaleSpec);\n\n  if (xScaleSpec.stacked === true) {\n    stackX(yScaleSpec.type, xy, series);\n  }\n\n  if (yScaleSpec.stacked === true) {\n    stackY(xScaleSpec.type, xy, series);\n  }\n\n  var xScale = computeScale(_extends({}, xScaleSpec, {\n    axis: 'x'\n  }), xy, width, height);\n  var yScale = computeScale(_extends({}, yScaleSpec, {\n    axis: 'y'\n  }), xy, width, height);\n  series.forEach(function (serie) {\n    serie.data.forEach(function (d) {\n      d.position = {\n        x: xScale.stacked === true ? d.data.xStacked === null ? null : xScale(d.data.xStacked) : d.data.x === null ? null : xScale(d.data.x),\n        y: yScale.stacked === true ? d.data.yStacked === null ? null : yScale(d.data.yStacked) : d.data.y === null ? null : yScale(d.data.y)\n      };\n    });\n  });\n  return _extends({}, xy, {\n    series: series,\n    xScale: xScale,\n    yScale: yScale\n  });\n};\n\nvar computeScale = function computeScale(spec, xy, width, height) {\n  if (spec.type === 'linear') return linearScale(spec, xy, width, height);else if (spec.type === 'point') return pointScale(spec, xy, width, height);else if (spec.type === 'time') return timeScale(spec, xy, width, height);\n};\n\nvar generateSeriesXY = function generateSeriesXY(series, xScaleSpec, yScaleSpec) {\n  return {\n    x: generateSeriesAxis(series, 'x', xScaleSpec),\n    y: generateSeriesAxis(series, 'y', yScaleSpec)\n  };\n};\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\n\n\nvar generateSeriesAxis = function generateSeriesAxis(series, axis, scaleSpec) {\n  if (scaleSpec.type === 'linear') {\n    series.forEach(function (serie) {\n      serie.data.forEach(function (d) {\n        d.data[axis] = d.data[axis] === null ? null : parseFloat(d.data[axis]);\n      });\n    });\n  } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n    var parseTime = createDateNormalizer(scaleSpec);\n    series.forEach(function (serie) {\n      serie.data.forEach(function (d) {\n        d.data[axis] = d.data[axis] === null ? null : parseTime(d.data[axis]);\n      });\n    });\n  }\n\n  var all = [];\n  series.forEach(function (serie) {\n    serie.data.forEach(function (d) {\n      all.push(d.data[axis]);\n    });\n  });\n  var min = void 0,\n      max = void 0;\n\n  if (scaleSpec.type === 'linear') {\n    all = uniq(all);\n    all = sortBy(all, function (v) {\n      return v;\n    });\n    min = Math.min.apply(Math, all);\n    max = Math.max.apply(Math, all);\n  } else if (scaleSpec.type === 'time') {\n    all = uniqBy(all, function (v) {\n      return v.getTime();\n    });\n    all = all.slice(0).sort(function (a, b) {\n      return b - a;\n    }).reverse();\n    min = all[0];\n    max = last(all);\n  } else {\n    all = uniq(all);\n    min = all[0];\n    max = last(all);\n  }\n\n  return {\n    all: all,\n    min: min,\n    max: max\n  };\n};\n\nvar stackAxis = function stackAxis(axis, otherType, xy, series) {\n  var otherAxis = getOtherAxis(axis);\n  var all = [];\n  xy[otherAxis].all.forEach(function (v) {\n    var compare = isDate(v) ? compareDateValues : compareValues;\n    var stack = [];\n    series.forEach(function (serie) {\n      var datum = serie.data.find(function (d) {\n        return compare(d.data[otherAxis], v);\n      });\n      var value = null;\n      var stackValue = null;\n\n      if (datum !== undefined) {\n        value = datum.data[axis];\n\n        if (value !== null) {\n          var head = last(stack);\n\n          if (head === undefined) {\n            stackValue = value;\n          } else if (head !== null) {\n            stackValue = head + value;\n          }\n        }\n\n        datum.data[axis + 'Stacked'] = stackValue;\n      }\n\n      stack.push(stackValue);\n      all.push(stackValue);\n    });\n  });\n  all = all.filter(function (v) {\n    return v !== null;\n  });\n  xy[axis].minStacked = Math.min.apply(Math, all);\n  xy[axis].maxStacked = Math.max.apply(Math, all);\n};\n\nvar stackX = function stackX(xy, otherType, series) {\n  return stackAxis('x', xy, otherType, series);\n};\n\nvar stackY = function stackY(xy, otherType, series) {\n  return stackAxis('y', xy, otherType, series);\n};\n\nvar computeAxisSlices = function computeAxisSlices(axis, data) {\n  var otherAxis = getOtherAxis(axis);\n  return data[otherAxis].all.map(function (v) {\n    var _slice;\n\n    var slice = (_slice = {\n      id: v\n    }, _slice[otherAxis] = data[otherAxis + 'Scale'](v), _slice.data = [], _slice);\n    var compare = isDate(v) ? compareDateValues : compareValues;\n    data.series.forEach(function (serie) {\n      var datum = serie.data.find(function (d) {\n        return compare(d.data[otherAxis], v);\n      });\n\n      if (datum !== undefined) {\n        slice.data.push(_extends({}, datum, {\n          serie: serie\n        }));\n      }\n    });\n    slice.data.reverse();\n    return slice;\n  });\n};\n\nvar computeXSlices = function computeXSlices(data) {\n  return computeAxisSlices('x', data);\n};\n\nvar computeYSlices = function computeYSlices(data) {\n  return computeAxisSlices('y', data);\n};\n\nvar scalePropType = PropTypes.oneOfType([PropTypes.shape(linearScalePropTypes), PropTypes.shape(pointScalePropTypes), PropTypes.shape(timeScalePropTypes)]);\nexports.scalePropType = scalePropType;\nexports.getOtherAxis = getOtherAxis;\nexports.compareValues = compareValues;\nexports.compareDateValues = compareDateValues;\nexports.computeXYScalesForSeries = computeXYScalesForSeries;\nexports.computeScale = computeScale;\nexports.generateSeriesXY = generateSeriesXY;\nexports.generateSeriesAxis = generateSeriesAxis;\nexports.stackAxis = stackAxis;\nexports.stackX = stackX;\nexports.stackY = stackY;\nexports.computeAxisSlices = computeAxisSlices;\nexports.computeXSlices = computeXSlices;\nexports.computeYSlices = computeYSlices;\nexports.linearScale = linearScale;\nexports.linearScalePropTypes = linearScalePropTypes;\nexports.pointScale = pointScale;\nexports.pointScalePropTypes = pointScalePropTypes;\nexports.timeScale = timeScale;\nexports.timeScalePropTypes = timeScalePropTypes;","map":{"version":3,"sources":["/Users/ceaseless/Desktop/coronatracker/nivo/nivo-line-issue/node_modules/@nivo/scales/cjs/nivo-scales.js"],"names":["Object","defineProperty","exports","value","_interopDefault","ex","d3Scale","require","PropTypes","d3TimeFormat","uniq","uniqBy","sortBy","last","isDate","linearScale","_ref","xy","width","height","axis","_ref$min","min","undefined","_ref$max","max","_ref$stacked","stacked","values","size","minValue","minStacked","maxValue","maxStacked","scale","scaleLinear","rangeRound","domain","type","linearScalePropTypes","oneOf","isRequired","oneOfType","number","bool","pointScale","scalePoint","range","all","pointScalePropTypes","_precisionCutOffsByTy","TIME_PRECISION_MILLISECOND","TIME_PRECISION_SECOND","TIME_PRECISION_MINUTE","TIME_PRECISION_HOUR","TIME_PRECISION_DAY","TIME_PRECISION_MONTH","TIME_PRECISION_YEAR","timePrecisions","precisionCutOffs","date","setMilliseconds","setSeconds","setMinutes","setHours","setDate","setMonth","precisionCutOffsByType","slice","createPrecisionMethod","precision","forEach","cutOff","createDateNormalizer","_ref$format","format","_ref$precision","precisionFn","v","parseTime","timeParse","timeScale","normalize","scaleTime","timeScalePropTypes","string","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","getOtherAxis","compareValues","a","b","compareDateValues","getTime","computeXYScalesForSeries","_series","xScaleSpec","yScaleSpec","series","map","serie","data","d","generateSeriesXY","stackX","stackY","xScale","computeScale","yScale","position","x","xStacked","y","yStacked","spec","generateSeriesAxis","scaleSpec","parseFloat","push","Math","apply","sort","reverse","stackAxis","otherType","otherAxis","compare","stack","datum","find","stackValue","head","filter","computeAxisSlices","_slice","id","computeXSlices","computeYSlices","scalePropType","shape"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar d3Scale = require('d3-scale');\nvar PropTypes = _interopDefault(require('prop-types'));\nvar d3TimeFormat = require('d3-time-format');\nvar uniq = _interopDefault(require('lodash/uniq'));\nvar uniqBy = _interopDefault(require('lodash/uniqBy'));\nvar sortBy = _interopDefault(require('lodash/sortBy'));\nvar last = _interopDefault(require('lodash/last'));\nvar isDate = _interopDefault(require('lodash/isDate'));\n\nvar linearScale = function linearScale(_ref, xy, width, height) {\n    var axis = _ref.axis,\n        _ref$min = _ref.min,\n        min = _ref$min === undefined ? 0 : _ref$min,\n        _ref$max = _ref.max,\n        max = _ref$max === undefined ? 'auto' : _ref$max,\n        _ref$stacked = _ref.stacked,\n        stacked = _ref$stacked === undefined ? false : _ref$stacked;\n\n    var values = xy[axis];\n    var size = axis === 'x' ? width : height;\n\n    var minValue = min;\n    if (min === 'auto') {\n        minValue = stacked === true ? values.minStacked : values.min;\n    }\n    var maxValue = max;\n    if (max === 'auto') {\n        maxValue = stacked === true ? values.maxStacked : values.max;\n    }\n\n    var scale = d3Scale.scaleLinear().rangeRound(axis === 'x' ? [0, size] : [size, 0]).domain([minValue, maxValue]);\n\n    scale.type = 'linear';\n    scale.stacked = stacked;\n\n    return scale;\n};\n\nvar linearScalePropTypes = {\n    type: PropTypes.oneOf(['linear']).isRequired,\n    min: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    max: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    stacked: PropTypes.bool\n};\n\nvar pointScale = function pointScale(_ref, xy, width, height) {\n    var axis = _ref.axis;\n\n    var values = xy[axis];\n    var size = axis === 'x' ? width : height;\n\n    var scale = d3Scale.scalePoint().range([0, size]).domain(values.all);\n\n    scale.type = 'point';\n\n    return scale;\n};\n\nvar pointScalePropTypes = {\n    type: PropTypes.oneOf(['point']).isRequired\n};\n\nvar _precisionCutOffsByTy;\n\nvar TIME_PRECISION_MILLISECOND = 'millisecond';\nvar TIME_PRECISION_SECOND = 'second';\nvar TIME_PRECISION_MINUTE = 'minute';\nvar TIME_PRECISION_HOUR = 'hour';\nvar TIME_PRECISION_DAY = 'day';\nvar TIME_PRECISION_MONTH = 'month';\nvar TIME_PRECISION_YEAR = 'year';\n\nvar timePrecisions = [TIME_PRECISION_MILLISECOND, TIME_PRECISION_SECOND, TIME_PRECISION_MINUTE, TIME_PRECISION_HOUR, TIME_PRECISION_DAY, TIME_PRECISION_MONTH, TIME_PRECISION_YEAR];\n\nvar precisionCutOffs = [function (date) {\n    return date.setMilliseconds(0);\n}, function (date) {\n    return date.setSeconds(0);\n}, function (date) {\n    return date.setMinutes(0);\n}, function (date) {\n    return date.setHours(0);\n}, function (date) {\n    return date.setDate(1);\n}, function (date) {\n    return date.setMonth(0);\n}];\n\nvar precisionCutOffsByType = (_precisionCutOffsByTy = {}, _precisionCutOffsByTy[TIME_PRECISION_MILLISECOND] = [], _precisionCutOffsByTy[TIME_PRECISION_SECOND] = precisionCutOffs.slice(0, 1), _precisionCutOffsByTy[TIME_PRECISION_MINUTE] = precisionCutOffs.slice(0, 2), _precisionCutOffsByTy[TIME_PRECISION_HOUR] = precisionCutOffs.slice(0, 3), _precisionCutOffsByTy[TIME_PRECISION_DAY] = precisionCutOffs.slice(0, 4), _precisionCutOffsByTy[TIME_PRECISION_MONTH] = precisionCutOffs.slice(0, 5), _precisionCutOffsByTy[TIME_PRECISION_YEAR] = precisionCutOffs.slice(0, 6), _precisionCutOffsByTy);\n\nvar createPrecisionMethod = function createPrecisionMethod(precision) {\n    return function (date) {\n        precisionCutOffsByType[precision].forEach(function (cutOff) {\n            cutOff(date);\n        });\n        return date;\n    };\n};\n\nvar createDateNormalizer = function createDateNormalizer(_ref) {\n    var _ref$format = _ref.format,\n        format = _ref$format === undefined ? 'native' : _ref$format,\n        _ref$precision = _ref.precision,\n        precision = _ref$precision === undefined ? 'millisecond' : _ref$precision;\n\n    var precisionFn = createPrecisionMethod(precision);\n    if (format === 'native') return function (v) {\n        return precisionFn(v);\n    };\n\n    var parseTime = d3TimeFormat.timeParse(format);\n    return function (v) {\n        return precisionFn(parseTime(v));\n    };\n};\n\nvar timeScale = function timeScale(_ref, xy, width, height) {\n    var axis = _ref.axis,\n        _ref$format = _ref.format,\n        format = _ref$format === undefined ? 'native' : _ref$format,\n        _ref$precision = _ref.precision,\n        precision = _ref$precision === undefined ? TIME_PRECISION_MILLISECOND : _ref$precision,\n        _ref$min = _ref.min,\n        min = _ref$min === undefined ? 'auto' : _ref$min,\n        _ref$max = _ref.max,\n        max = _ref$max === undefined ? 'auto' : _ref$max;\n\n    var values = xy[axis];\n    var size = axis === 'x' ? width : height;\n\n    var normalize = createDateNormalizer({ format: format, precision: precision });\n\n    var minValue = min;\n    if (min === 'auto') {\n        minValue = values.min;\n    } else if (format !== 'native') {\n        minValue = normalize(values.min);\n    }\n\n    var maxValue = max;\n    if (max === 'auto') {\n        maxValue = values.max;\n    } else if (format !== 'native') {\n        maxValue = normalize(values.max);\n    }\n\n    var scale = d3Scale.scaleTime().domain([minValue, maxValue]).range([0, size]);\n\n    scale.type = 'time';\n\n    return scale;\n};\n\nvar timeScalePropTypes = {\n    type: PropTypes.oneOf(['time']).isRequired,\n    format: PropTypes.string,\n    precision: PropTypes.oneOf(timePrecisions)\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar getOtherAxis = function getOtherAxis(axis) {\n    return axis === 'x' ? 'y' : 'x';\n};\n\nvar compareValues = function compareValues(a, b) {\n    return a === b;\n};\nvar compareDateValues = function compareDateValues(a, b) {\n    return a.getTime() === b.getTime();\n};\n\nvar computeXYScalesForSeries = function computeXYScalesForSeries(_series, xScaleSpec, yScaleSpec, width, height) {\n    var series = _series.map(function (serie) {\n        return _extends({}, serie, {\n            data: serie.data.map(function (d) {\n                return { data: _extends({}, d) };\n            })\n        });\n    });\n\n    var xy = generateSeriesXY(series, xScaleSpec, yScaleSpec);\n    if (xScaleSpec.stacked === true) {\n        stackX(yScaleSpec.type, xy, series);\n    }\n    if (yScaleSpec.stacked === true) {\n        stackY(xScaleSpec.type, xy, series);\n    }\n\n    var xScale = computeScale(_extends({}, xScaleSpec, { axis: 'x' }), xy, width, height);\n    var yScale = computeScale(_extends({}, yScaleSpec, { axis: 'y' }), xy, width, height);\n\n    series.forEach(function (serie) {\n        serie.data.forEach(function (d) {\n            d.position = {\n                x: xScale.stacked === true ? d.data.xStacked === null ? null : xScale(d.data.xStacked) : d.data.x === null ? null : xScale(d.data.x),\n                y: yScale.stacked === true ? d.data.yStacked === null ? null : yScale(d.data.yStacked) : d.data.y === null ? null : yScale(d.data.y)\n            };\n        });\n    });\n\n    return _extends({}, xy, {\n        series: series,\n        xScale: xScale,\n        yScale: yScale\n    });\n};\n\nvar computeScale = function computeScale(spec, xy, width, height) {\n    if (spec.type === 'linear') return linearScale(spec, xy, width, height);else if (spec.type === 'point') return pointScale(spec, xy, width, height);else if (spec.type === 'time') return timeScale(spec, xy, width, height);\n};\n\nvar generateSeriesXY = function generateSeriesXY(series, xScaleSpec, yScaleSpec) {\n    return {\n        x: generateSeriesAxis(series, 'x', xScaleSpec),\n        y: generateSeriesAxis(series, 'y', yScaleSpec)\n    };\n};\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nvar generateSeriesAxis = function generateSeriesAxis(series, axis, scaleSpec) {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(function (serie) {\n            serie.data.forEach(function (d) {\n                d.data[axis] = d.data[axis] === null ? null : parseFloat(d.data[axis]);\n            });\n        });\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        var parseTime = createDateNormalizer(scaleSpec);\n        series.forEach(function (serie) {\n            serie.data.forEach(function (d) {\n                d.data[axis] = d.data[axis] === null ? null : parseTime(d.data[axis]);\n            });\n        });\n    }\n\n    var all = [];\n    series.forEach(function (serie) {\n        serie.data.forEach(function (d) {\n            all.push(d.data[axis]);\n        });\n    });\n\n    var min = void 0,\n        max = void 0;\n    if (scaleSpec.type === 'linear') {\n        all = uniq(all);\n        all = sortBy(all, function (v) {\n            return v;\n        });\n        min = Math.min.apply(Math, all);\n        max = Math.max.apply(Math, all);\n    } else if (scaleSpec.type === 'time') {\n        all = uniqBy(all, function (v) {\n            return v.getTime();\n        });\n        all = all.slice(0).sort(function (a, b) {\n            return b - a;\n        }).reverse();\n        min = all[0];\n        max = last(all);\n    } else {\n        all = uniq(all);\n        min = all[0];\n        max = last(all);\n    }\n\n    return { all: all, min: min, max: max };\n};\n\nvar stackAxis = function stackAxis(axis, otherType, xy, series) {\n    var otherAxis = getOtherAxis(axis);\n\n    var all = [];\n    xy[otherAxis].all.forEach(function (v) {\n        var compare = isDate(v) ? compareDateValues : compareValues;\n        var stack = [];\n        series.forEach(function (serie) {\n            var datum = serie.data.find(function (d) {\n                return compare(d.data[otherAxis], v);\n            });\n            var value = null;\n            var stackValue = null;\n            if (datum !== undefined) {\n                value = datum.data[axis];\n                if (value !== null) {\n                    var head = last(stack);\n                    if (head === undefined) {\n                        stackValue = value;\n                    } else if (head !== null) {\n                        stackValue = head + value;\n                    }\n                }\n                datum.data[axis + 'Stacked'] = stackValue;\n            }\n            stack.push(stackValue);\n            all.push(stackValue);\n        });\n    });\n    all = all.filter(function (v) {\n        return v !== null;\n    });\n\n    xy[axis].minStacked = Math.min.apply(Math, all);\n    xy[axis].maxStacked = Math.max.apply(Math, all);\n};\n\nvar stackX = function stackX(xy, otherType, series) {\n    return stackAxis('x', xy, otherType, series);\n};\nvar stackY = function stackY(xy, otherType, series) {\n    return stackAxis('y', xy, otherType, series);\n};\n\nvar computeAxisSlices = function computeAxisSlices(axis, data) {\n    var otherAxis = getOtherAxis(axis);\n\n    return data[otherAxis].all.map(function (v) {\n        var _slice;\n\n        var slice = (_slice = {\n            id: v\n        }, _slice[otherAxis] = data[otherAxis + 'Scale'](v), _slice.data = [], _slice);\n        var compare = isDate(v) ? compareDateValues : compareValues;\n        data.series.forEach(function (serie) {\n            var datum = serie.data.find(function (d) {\n                return compare(d.data[otherAxis], v);\n            });\n            if (datum !== undefined) {\n                slice.data.push(_extends({}, datum, {\n                    serie: serie\n                }));\n            }\n        });\n        slice.data.reverse();\n\n        return slice;\n    });\n};\n\nvar computeXSlices = function computeXSlices(data) {\n    return computeAxisSlices('x', data);\n};\nvar computeYSlices = function computeYSlices(data) {\n    return computeAxisSlices('y', data);\n};\n\nvar scalePropType = PropTypes.oneOfType([PropTypes.shape(linearScalePropTypes), PropTypes.shape(pointScalePropTypes), PropTypes.shape(timeScalePropTypes)]);\n\nexports.scalePropType = scalePropType;\nexports.getOtherAxis = getOtherAxis;\nexports.compareValues = compareValues;\nexports.compareDateValues = compareDateValues;\nexports.computeXYScalesForSeries = computeXYScalesForSeries;\nexports.computeScale = computeScale;\nexports.generateSeriesXY = generateSeriesXY;\nexports.generateSeriesAxis = generateSeriesAxis;\nexports.stackAxis = stackAxis;\nexports.stackX = stackX;\nexports.stackY = stackY;\nexports.computeAxisSlices = computeAxisSlices;\nexports.computeXSlices = computeXSlices;\nexports.computeYSlices = computeYSlices;\nexports.linearScale = linearScale;\nexports.linearScalePropTypes = linearScalePropTypes;\nexports.pointScale = pointScale;\nexports.pointScalePropTypes = pointScalePropTypes;\nexports.timeScale = timeScale;\nexports.timeScalePropTypes = timeScalePropTypes;\n"]},"metadata":{},"sourceType":"script"}
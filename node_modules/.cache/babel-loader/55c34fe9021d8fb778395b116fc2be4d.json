{"ast":null,"code":"var _jsxFileName = \"/Users/ceaseless/Desktop/coronatracker/nivo/nivo-line-issue/src/index.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport { Line } from '@nivo/line';\nimport './style.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React',\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://pomber.github.io/covid19/timeseries.json', {\n      method: 'GET'\n    }).then(r => r.json).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n    console.log(data);\n  }\n\n  get lineChartConfig() {\n    return {\n      width: 800,\n      height: 600,\n      data: [{\n        id: `Line1`,\n        data: [{\n          x: new Date(`09-10-2018`),\n          y: 3\n        }, {\n          x: new Date(`09-11-2018`),\n          y: 5\n        }, {\n          x: new Date(`09-12-2018`),\n          y: 1\n        }, {\n          x: new Date(`09-13-2018`),\n          y: 6\n        }]\n      }, {\n        id: `Line2`,\n        data: [{\n          x: new Date(`09-10-2018`),\n          y: 5\n        }, {\n          x: new Date(`09-11-2018`),\n          y: 3\n        }, {\n          x: new Date(`09-12-2018`),\n          y: 4\n        }, {\n          x: new Date(`09-13-2018`),\n          y: 3\n        }]\n      }],\n      margin: {\n        top: 50,\n        right: 50,\n        bottom: 50,\n        left: 50\n      },\n      yScale: {\n        type: 'linear',\n        stacked: false\n      },\n      xScale: {\n        type: 'time',\n        precision: 'day'\n      },\n      axisBottom: {\n        format: '%b %d'\n      }\n    };\n  }\n\n  get lineChartConfigFromExample() {\n    return {\n      width: 900,\n      height: 400,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 60,\n        left: 80\n      },\n      data: [{\n        id: 'fake corp. A',\n        data: [{\n          x: '2018-01-01',\n          y: 7\n        }, {\n          x: '2018-01-02',\n          y: 5\n        }, {\n          x: '2018-01-03',\n          y: 11\n        }]\n      }, {\n        id: 'fake corp. B',\n        data: [{\n          x: '2018-01-04',\n          y: 14\n        }, {\n          x: '2018-01-05',\n          y: 14\n        }, {\n          x: '2018-01-06',\n          y: 15\n        }]\n      }],\n      animate: true,\n      xScale: {\n        type: 'time',\n        format: '%Y-%m-%d',\n        precision: 'day'\n      },\n      yScale: {\n        type: 'linear',\n        stacked: false\n      },\n      axisBottom: {\n        format: '%b %d'\n      },\n      curve: 'step',\n      enableDotLabel: true,\n      dotSize: 16,\n      dotBorderWidth: 1,\n      dotBorderColor: 'inherit:darker(0.3)'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Custom Data\"), React.createElement(Line, Object.assign({\n      key: 1\n    }, this.lineChartConfig, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Data from the \", React.createElement(\"a\", {\n      href: \"http://nivo.rocks/storybook/?knob-curve=step&selectedKind=Line&selectedStory=time%20x%20scale&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs\",\n      title: \"@nivo/line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"example\")), React.createElement(Line, Object.assign({\n      key: 2\n    }, this.lineChartConfigFromExample, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })));\n  }\n\n}\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ceaseless/Desktop/coronatracker/nivo/nivo-line-issue/src/index.js"],"names":["React","Component","render","Hello","Line","App","constructor","state","name","data","componentDidMount","fetch","method","then","r","json","setState","console","log","lineChartConfig","width","height","id","x","Date","y","margin","top","right","bottom","left","yScale","type","stacked","xScale","precision","axisBottom","format","lineChartConfigFromExample","animate","curve","enableDotLabel","dotSize","dotBorderWidth","dotBorderColor","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport { Line } from '@nivo/line';\nimport './style.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React',\n      data:[]\n    };\n  }\n\ncomponentDidMount(){\nfetch('https://pomber.github.io/covid19/timeseries.json',{\n  method: 'GET'\n})\n.then(r=>r.json)\n.then(data=>{\n  this.setState({data:data})\n  \n})\nconsole.log(data)\n}\n\n  get lineChartConfig() {\n    return {\n      width: 800,\n      height: 600,\n      data: [\n        {\n          id: `Line1`,\n          data: [\n            { x: new Date(`09-10-2018`), y: 3 },\n            { x: new Date(`09-11-2018`), y: 5 },\n            { x: new Date(`09-12-2018`), y: 1 },\n            { x: new Date(`09-13-2018`), y: 6 },\n          ]\n        },\n        {\n          id: `Line2`,\n          data: [\n            { x: new Date(`09-10-2018`), y: 5 },\n            { x: new Date(`09-11-2018`), y: 3 },\n            { x: new Date(`09-12-2018`), y: 4 },\n            { x: new Date(`09-13-2018`), y: 3 },\n          ]\n        }\n      ],\n      margin: {\n        top: 50,\n        right: 50,\n        bottom: 50,\n        left: 50,\n      },\n      yScale: {\n        type: 'linear',\n        stacked: false\n        },\n      xScale: {\n        type: 'time',\n        precision: 'day',\n      },\n      axisBottom: {\n        format: '%b %d',\n      }\n    };\n  }\n\n  get lineChartConfigFromExample() {\n    return {\n      width: 900,\n      height: 400,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 60,\n        left: 80\n      },\n      data: [\n        {\n          id: 'fake corp. A',\n          data: [\n            {x: '2018-01-01',y: 7},\n            {x: '2018-01-02',y: 5},\n            {x: '2018-01-03',y: 11},\n          ]\n        },\n        {\n          id: 'fake corp. B',\n          data: [\n            {x: '2018-01-04',y: 14},\n            {x: '2018-01-05',y: 14},\n            {x: '2018-01-06',y: 15},\n          ]\n        }\n      ],\n      animate: true,\n      xScale:{\n        type: 'time',\n        format: '%Y-%m-%d',\n        precision: 'day'\n        },\n      yScale: {\n        type: 'linear',\n        stacked: false\n      },\n      axisBottom: {\n        format: '%b %d'\n      },\n      curve: 'step',\n      enableDotLabel: true,\n      dotSize: 16,\n      dotBorderWidth: 1,\n      dotBorderColor: 'inherit:darker(0.3)'\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Custom Data</h3>\n        <Line key={1}\n          {...this.lineChartConfig}\n        />\n\n        <h3>Data from the <a\n          href=\"http://nivo.rocks/storybook/?knob-curve=step&selectedKind=Line&selectedStory=time%20x%20scale&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs\"\n          title=\"@nivo/line\"\n        >example</a></h3>\n        <Line key={2}\n        {...this.lineChartConfigFromExample}\n        />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}